library(rvest)
# 擷取該篇關鍵字
grep_keyword = function(url){
free_url = read_html(url)
free_keyword = free_url %>% html_nodes(".con_keyword") %>% html_nodes("a") %>% html_text()
return(free_keyword)
}
# 抓取某日期後所有頁面的關鍵字
# 今日日期
start_date = Sys.Date()
i = 1
keyword = ""
repeat{
news_url = read_html(paste0("http://news.ltn.com.tw/list/BreakingNews?page=",i))
# 分析html萃取時間
times = news_url %>% html_nodes(".lipic span") %>% html_text()
# 轉換成日期格式
times = as.character.Date(times) %>% as.POSIXct(., format="%Y-%m-%d %H:%M")
# 分析html萃取子url
sub_news_url = news_url %>% html_nodes(".picword") %>% html_attr("href")
df = data.frame(times = times,sub_news_url = sub_news_url)
df = subset(df,as.Date(df$times) >= start_date)
print(paste0("第",i,"頁完成"))
if(length(df$sub_news_url) != 0){
for(j in 1:length(df$sub_news_url)){
# 抓取子頁keyword
keyword = c(keyword,grep_keyword(sub_news_url[j]))
}
i = i+1
}else{
break
}
}
#不重複，並把第一個空字元刪除
keyword = unique(keyword[-1])
#寫入txt裡
fileConn<-file("direc.txt")
writeLines(keyword, fileConn)
close(fileConn)
x = rnorm(20)
y = rnorm(20)
lm.result = lm(y ~ x)
lm.result
plot()
plot(lm.result)
names(lm.result)
lm.result
lm.result$coefficients
library("C50", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:C50", unload=TRUE)
library(tree)
install.packages("tree")
library(tree)
p = 0.9  # proportion of training examples in the data set
index = sample(2, nrow(iris), replace = TRUE, prob=c(p,1-p))
nrow(iris)
index
train = iris[index == 1,]
train
train = iris[index == 1,]
test = iris[index == 2,]
Xall = iris[,-- which(colnames(iris)=="Species") ]
Xall
Xtrain = train[,- which(colnames(iris)=="Species") ]
Xtrain = train[,which(colnames(iris)=="Species") ]
Xtrain
Xtrain = train[,- which(colnames(iris)=="Species") ]
Xtrain
Xall = iris[,-- which(colnames(iris)=="Species") ]
p = 0.9  # proportion of training examples in the data set
index = sample(2, nrow(iris), replace = TRUE, prob=c(p,1-p))
index
#分割資料集（訓練、測試）
train = iris[index == 1,]
test = iris[index == 2,]
Xall = iris[,-- which(colnames(iris)=="Species") ]
# or Xall = iris[ , -  column index of Y ]
# example  Xall = iris[, - 5]
Xtrain = train[,- which(colnames(iris)=="Species") ]
# or  Xtrain = train[, - column index of Y ]
# 例如 Xtest = train[, - 5]
Ytrain = as.factor(train$Species)
Xtest = test[,- which(colnames(iris)=="Species") ]
# or Xtest = test[, - column index of Y  ] ,
# example  Xtest = test[, - 5]
# 轉換型態
Ytest = as.factor(test$Species)
library(tree)
#  (training sample)
result1 = tree(Species ~ . ,data=train)  # Note that data=train
result1
names(result1)
plot(result1)
text(result1)
Ypred1 = predict(result1,type="class")
Ypred1
sum(diag(t1))/sum(t1)
t1 = table(train$Species, Ypred1) # Note that train$Species
t1
sum(diag(t1))/sum(t1)
Ypred1 = predict(result1,type="class")
t1 = table(train$Species, Ypred1)
t1 = table(train$Species)
t1
t1 = table(train$Species,Ypred1)
t1
Ypred1
Ypred2 = predict(result1,newdata=Xtest,type="class")
#-------------------------------------------------------
t2 = table(test$Species, Ypred2) # Note: test$Species
t2
sum(diag(t2))/sum(t2)
detach("package:tree", unload=TRUE)
setwd("~/Documents/Ｒ/DataMining/20160926/作業")
read.table("SAheart.txt",header = TRUE)
read.csv("SAheart.txt",header = TRUE)
head(heart)
heart = read.csv("SAheart.txt",header = TRUE)
head(heart)
heart = heart[,-1]
heart
class(heart$chd)
Xall = iris[,-- which(colnames(iris)=="Species") ]
Xtrain = train[,- which(colnames(iris)=="Species") ]
Xtrain = train[,-- which(colnames(iris)=="Species") ]
Xtrain
Xtrain = train[,- which(colnames(iris)=="Species") ]
Xtrain
index = sample(2, nrow(heart), replace = TRUE, prob=c(p,1-p))
heart
heart$chd
class(heart$chd)
colnames(heart)
colnames(heart) == "famhist"
iris$Species
Xall = heart[,-- which(colnames(heart)=="famhist") ]
# or Xall = iris[ , -  column index of Y ]
# example  Xall = iris[, - 5]
Xtrain = train[,- which(colnames(heart)=="famhist") ]
# or  Xtrain = train[, - column index of Y ]
test = heart[index == 2,]
train = heart[index == 1,]
test = heart[index == 2,]
Ytest = as.factor(test$chd)
result1 = tree(famhist ~ . ,data=train)  # Note that data=train
result1
names(result1)
plot(result1)
text(result1)
heart = read.csv("SAheart.txt",header = TRUE)
head(heart)
heart = heart[,-1]
# 分割資料集（訓練、測試）
p = 0.9  # proportion of training examples in the data set
index = sample(2, nrow(heart), replace = TRUE, prob=c(p,1-p))
index
train = heart[index == 1,]
test = heart[index == 2,]
Xall = heart[,-- which(colnames(heart)=="famhist") ]
# or Xall = iris[ , -  column index of Y ]
# example  Xall = iris[, - 5]
Xtrain = train[,- which(colnames(heart)=="famhist") ]
# or  Xtrain = train[, - column index of Y ]
# 例如 Xtest = train[, - 5]
Ytrain = as.factor(heart$chd)
Xtest = test[,- which(colnames(heart)=="famhist") ]
# or Xtest = test[, - column index of Y  ] ,
# example  Xtest = test[, - 5]
# 轉換型態
Ytest = as.factor(test$chd)
library(tree)
#  (training sample)
result1 = tree(famhist ~ . ,data=train)  # Note that data=train
result1
names(result1)
plot(result1)
text(result1)
---
title: "20160926_HW"
author: "Luke Fan"
date: "2016年9月26日"
output: html_document
---
```{r}
setwd("~/Documents/Ｒ/DataMining/20160926/作業")
# 讀資料
heart = read.csv("SAheart.txt",header = TRUE)
head(heart)
heart = heart[,-1]
# 分割資料集（訓練、測試）
p = 0.9  # proportion of training examples in the data set
index = sample(2, nrow(heart), replace = TRUE, prob=c(p,1-p))
index
train = heart[index == 1,]
test = heart[index == 2,]
Xall = heart[,-- which(colnames(heart)=="chd") ]
# or Xall = iris[ , -  column index of Y ]
# example  Xall = iris[, - 5]
Xtrain = train[,- which(colnames(heart)=="chd") ]
# or  Xtrain = train[, - column index of Y ]
# 例如 Xtest = train[, - 5]
Ytrain = as.factor(heart$chd)
Xtest = test[,- which(colnames(heart)=="chd") ]
# or Xtest = test[, - column index of Y  ] ,
# example  Xtest = test[, - 5]
# 轉換型態
Ytest = as.factor(test$chd)
library(tree)
#  (training sample)
result1 = tree(chd ~ . ,data=train)  # Note that data=train
result1
names(result1)
plot(result1)
#加入標籤
text(result1)
Ypred1 = predict(result1,type="class")
t1 = table(train$Species, Ypred1) # Note that train$Species
t1
sum(diag(t1))/sum(t1)
#  (test sample)
result2 = tree(Species ~ . ,data=test)  # Note that  data=test
result2
names(result2)
plot(result2)
text(result2)
#---------------------- Note:a new argument  newdata=Xtest is included
Ypred2 = predict(result1,newdata=Xtest,type="class")
#-------------------------------------------------------
t2 = table(test$Species, Ypred2) # Note: test$Species
t2
sum(diag(t2))/sum(t2)
```
setwd("~/Documents/Ｒ/DataMining/20160926/作業")
# 讀資料
heart = read.csv("SAheart.txt",header = TRUE)
head(heart)
heart = heart[,-1]
# 分割資料集（訓練、測試）
p = 0.9  # proportion of training examples in the data set
index = sample(2, nrow(heart), replace = TRUE, prob=c(p,1-p))
index
train = heart[index == 1,]
test = heart[index == 2,]
Xall = heart[,-- which(colnames(heart)=="famhist") ]
# or Xall = iris[ , -  column index of Y ]
# example  Xall = iris[, - 5]
Xtrain = train[,- which(colnames(heart)=="famhist") ]
# or  Xtrain = train[, - column index of Y ]
# 例如 Xtest = train[, - 5]
Ytrain = as.factor(heart$chd)
Xtest = test[,- which(colnames(heart)=="famhist") ]
# or Xtest = test[, - column index of Y  ] ,
# example  Xtest = test[, - 5]
# 轉換型態
Ytest = as.factor(test$chd)
library(tree)
#  (training sample)
result1 = tree(chd ~ . ,data=train)  # Note that data=train
result1
names(result1)
plot(result1)
#加入標籤
text(result1)
Ypred1 = predict(result1,type="class")
t1 = table(train$Species, Ypred1) # Note that train$Species
t1
sum(diag(t1))/sum(t1)
#  (test sample)
result2 = tree(Species ~ . ,data=test)  # Note that  data=test
result2
names(result2)
plot(result2)
text(result2)
#---------------------- Note:a new argument  newdata=Xtest is included
Ypred2 = predict(result1,newdata=Xtest,type="class")
#-------------------------------------------------------
t2 = table(test$Species, Ypred2) # Note: test$Species
t2
sum(diag(t2))/sum(t2)
setwd("~/Documents/Ｒ/DataMining/20160926/作業")
# 讀資料
heart = read.csv("SAheart.txt",header = TRUE)
head(heart)
heart = heart[,-1]
# 分割資料集（訓練、測試）
p = 0.9  # proportion of training examples in the data set
index = sample(2, nrow(heart), replace = TRUE, prob=c(p,1-p))
index
train = heart[index == 1,]
test = heart[index == 2,]
Xall = heart[,-- which(colnames(heart)=="famhist") ]
# or Xall = iris[ , -  column index of Y ]
# example  Xall = iris[, - 5]
Xtrain = train[,- which(colnames(heart)=="famhist") ]
# or  Xtrain = train[, - column index of Y ]
# 例如 Xtest = train[, - 5]
Ytrain = as.factor(heart$chd)
Xtest = test[,- which(colnames(heart)=="famhist") ]
# or Xtest = test[, - column index of Y  ] ,
# example  Xtest = test[, - 5]
# 轉換型態
Ytest = as.factor(test$chd)
library(tree)
#  (training sample)
result1 = tree(chd ~ . ,data=train)  # Note that data=train
result1
names(result1)
plot(result1)
#加入標籤
text(result1)
setwd("~/Documents/Ｒ/DataMining/20160926/作業")
# 讀資料
heart = read.csv("SAheart.txt",header = TRUE)
head(heart)
heart = heart[,-1]
# 分割資料集（訓練、測試）
p = 0.9  # proportion of training examples in the data set
index = sample(2, nrow(heart), replace = TRUE, prob=c(p,1-p))
index
train = heart[index == 1,]
test = heart[index == 2,]
Xall = heart[,-- which(colnames(heart)=="famhist") ]
# or Xall = iris[ , -  column index of Y ]
# example  Xall = iris[, - 5]
Xtrain = train[,- which(colnames(heart)=="famhist") ]
# or  Xtrain = train[, - column index of Y ]
# 例如 Xtest = train[, - 5]
Ytrain = as.factor(heart$chd)
Xtest = test[,- which(colnames(heart)=="famhist") ]
# or Xtest = test[, - column index of Y  ] ,
# example  Xtest = test[, - 5]
# 轉換型態
Ytest = as.factor(test$chd)
library(tree)
#  (training sample)
result1 = tree(famhist ~ . ,data=train)  # Note that data=train
result1
names(result1)
plot(result1)
#加入標籤
text(result1)
Xall = heart[,-- which(colnames(heart)=="famhist") ]
Xall
Xtest = test[,- which(colnames(heart)=="famhist") ]
Xtest
setwd("~/Documents/Ｒ/DataMining/20160926/作業")
# 讀資料
heart = read.csv("SAheart.txt",header = TRUE)
head(heart)
heart = heart[,-1]
# 分割資料集（訓練、測試）
p = 0.9  # proportion of training examples in the data set
index = sample(2, nrow(heart), replace = TRUE, prob=c(p,1-p))
index
train = heart[index == 1,]
test = heart[index == 2,]
Xall = heart[,-- which(colnames(heart)=="famhist") ]
# or Xall = iris[ , -  column index of Y ]
# example  Xall = iris[, - 5]
Xtrain = train[,- which(colnames(heart)=="famhist") ]
# or  Xtrain = train[, - column index of Y ]
# 例如 Xtest = train[, - 5]
Ytrain = as.factor(heart$chd)
Xtest = test[,- which(colnames(heart)=="famhist") ]
# or Xtest = test[, - column index of Y  ] ,
# example  Xtest = test[, - 5]
# 轉換型態
Ytest = as.factor(test$chd)
library(tree)
#  (Tree)
result1 = tree(famhist ~ . ,data=train)  # Note that data=train
result1
names(result1)
plot(result1)
#加入標籤
text(result1)
Ypred1 = predict(result1,type="class")
t1 = table(train$famhlist, Ypred1) # Note that train$Species
t1
sum(diag(t1))/sum(t1)
#  (test sample)
result2 = tree(famhlist ~ . ,data=test)  # Note that  data=test
result2
names(result2)
plot(result2)
text(result2)
#---------------------- Note:a new argument  newdata=Xtest is included
Ypred2 = predict(result1,newdata=Xtest,type="class")
#-------------------------------------------------------
t2 = table(test$famhlist, Ypred2) # Note: test$Species
t2
sum(diag(t2))/sum(t2)
setwd("~/Documents/Ｒ/DataMining/20160926/作業")
# 讀資料
heart = read.csv("SAheart.txt",header = TRUE)
head(heart)
heart = heart[,-1]
# 分割資料集（訓練、測試）
p = 0.9  # proportion of training examples in the data set
index = sample(2, nrow(heart), replace = TRUE, prob=c(p,1-p))
index
train = heart[index == 1,]
test = heart[index == 2,]
Xall = heart[,-- which(colnames(heart)=="famhist") ]
# or Xall = iris[ , -  column index of Y ]
# example  Xall = iris[, - 5]
Xtrain = train[,- which(colnames(heart)=="famhist") ]
# or  Xtrain = train[, - column index of Y ]
# 例如 Xtest = train[, - 5]
Ytrain = as.factor(heart$chd)
Xtest = test[,- which(colnames(heart)=="famhist") ]
# or Xtest = test[, - column index of Y  ] ,
# example  Xtest = test[, - 5]
# 轉換型態
Ytest = as.factor(test$chd)
library(tree)
#  (Tree)
result1 = tree(famhist ~ . ,data=train)  # Note that data=train
result1
names(result1)
plot(result1)
#加入標籤
text(result1)
Ypred1 = predict(result1,type="class")
t1 = table(train$famhlist, Ypred1) # Note that train$Species
t1
sum(diag(t1))/sum(t1)
#  (test sample)
result2 = tree(famhist ~ . ,data=test)  # Note that  data=test
result2
names(result2)
plot(result2)
text(result2)
#---------------------- Note:a new argument  newdata=Xtest is included
Ypred2 = predict(result1,newdata=Xtest,type="class")
#-------------------------------------------------------
t2 = table(test$famhist, Ypred2) # Note: test$Species
t2
sum(diag(t2))/sum(t2)
t2
diag(t1)
t1 = table(train$famhlist, Ypred1) # Note that train$Species
Ypred1 = predict(result1,type="class")
Ypred1
t1 = table(train$famhlist, Ypred1) # Note that train$Species
t1 = table(train$famhist, Ypred1) # Note that train$famhist
t1
setwd("~/Documents/Ｒ/DataMining/20160926/作業")
# 讀資料
heart = read.csv("SAheart.txt",header = TRUE)
head(heart)
heart = heart[,-1]
# 分割資料集（訓練、測試）
p = 0.9  # proportion of training examples in the data set
index = sample(2, nrow(heart), replace = TRUE, prob=c(p,1-p))
index
train = heart[index == 1,]
test = heart[index == 2,]
Xall = heart[,-- which(colnames(heart)=="famhist") ]
# or Xall = iris[ , -  column index of Y ]
# example  Xall = iris[, - 5]
Xtrain = train[,- which(colnames(heart)=="famhist") ]
# or  Xtrain = train[, - column index of Y ]
# 例如 Xtest = train[, - 5]
Ytrain = as.factor(heart$chd)
Xtest = test[,- which(colnames(heart)=="famhist") ]
# or Xtest = test[, - column index of Y  ] ,
# example  Xtest = test[, - 5]
# 轉換型態
Ytest = as.factor(test$chd)
library(tree)
#  (Tree)
# Note that data=train
result1 = tree(famhist ~ . ,data=train)
result1
names(result1)
plot(result1)
#加入標籤
text(result1)
Ypred1 = predict(result1,type="class")
t1 = table(train$famhist, Ypred1) # Note that train$famhist
t1
sum(diag(t1))/sum(t1)
#  (test sample)
result2 = tree(famhist ~ . ,data=test)  # Note that  data=test
result2
names(result2)
plot(result2)
text(result2)
#---------------------- Note:a new argument  newdata=Xtest is included
Ypred2 = predict(result1,newdata=Xtest,type="class")
#-------------------------------------------------------
t2 = table(test$famhist, Ypred2) # Note: test$Species
t2
sum(diag(t2))/sum(t2)
